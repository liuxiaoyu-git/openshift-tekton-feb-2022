apiVersion: v1
kind: PersistentVolume
metadata:
  name: maven-tekton-pv
spec:
  capacity:
    storage: 500Mi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain 
  nfs: 
    path: /mnt/nfs_share 
    server: 192.168.1.80 
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: maven-tekton-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500Mi

---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: mvn
spec:
  workspaces:
  - name: maven-repo
  inputs:
    params:
    - name: GOALS
      description: The Maven goals to run
      type: array
      default: ["install"]
    resources:
    - name: source
      type: git
  steps:
    - name: mvn
      image: gcr.io/cloud-builders/mvn
      workingDir: /workspace/source
      command: ["/usr/bin/mvn"]
      args:
        - -Dmaven.repo.local=$(workspaces.maven-repo.path)
        - "$(inputs.params.GOALS)"
---
apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: maven-build
spec:
  workspaces:
  - name: local-maven-repo
  resources:
  - name: app-git
    type: git
  tasks:

  - name: clone-repo 
    taskRef:
      name: mvn
    resources:
      inputs:
      - name: source
        resource: app-git
    params:
    - name: GOALS
      value: ["validate"]
    workspaces:
    - name: maven-repo
      workspace: local-maven-repo

  - name: compile 
    taskRef:
      name: mvn
    runAfter: ["clone-repo"]
    resources:
      inputs:
      - name: source
        resource: app-git
    params:
    - name: GOALS
      value: ["compile"]
    workspaces:
    - name: maven-repo
      workspace: local-maven-repo

  - name: test 
    taskRef:
      name: mvn
    runAfter: ["compile"]
    resources:
      inputs:
      - name: source
        resource: app-git
    params:
    - name: GOALS
      value: ["test"] 
    workspaces:
    - name: maven-repo
      workspace: local-maven-repo

  - name: package 
    taskRef:
      name: mvn
    runAfter: ["test"]
    resources:
      inputs:
      - name: source
        resource: app-git
    params:
    - name: GOALS
      value: ["package"] 
    workspaces:
    - name: maven-repo
      workspace: local-maven-repo

  - name: install 
    taskRef:
      name: mvn
    runAfter: ["package"]
    resources:
      inputs:
      - name: source
        resource: app-git
    params:
    - name: GOALS
      value: ["install"] 
    workspaces:
    - name: maven-repo
      workspace: local-maven-repo
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineRun
metadata:
  name: hello-springboot-app
spec:
  pipelineRef:
    name: maven-build

  podTemplate:
    securityContext:
      runAsNonRoot: true
      runAsUser: 1001
  resources:

  - name: app-git
    resourceSpec:
      type: git
      params:
        - name: url
          value: https://github.com/tektutor/spring-ms.git
  workspaces:
  - name: local-maven-repo
    persistentVolumeClaim:
      claimName: maven-tekton-pvc
